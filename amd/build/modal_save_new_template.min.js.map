{"version":3,"file":"modal_save_new_template.min.js","sources":["../src/modal_save_new_template.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Creates the modals for the guide tips.\n *\n * @author      Jay Churchward <jay@brickfieldlabs.ie>\n * @copyright   2021 Brickfield Education Labs <jay@brickfieldlabs.ie>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Modal from 'core/modal';\nimport ModalRegistry from 'core/modal_registry';\nimport ModalEvents from 'core/modal_events';\nimport PlannerEvents from 'mod_planner/events';\nimport CustomEvents from 'core/custom_interaction_events';\n\nlet registered = false;\nconst SELECTORS = {\n    SAVE_BUTTON: '[data-action=\"saveNewTemplate\"]',\n    CANCEL_BUTTON: '[data-action=\"cancel\"]',\n};\n\nexport default class ModalSaveNewTemplate extends Modal {\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    constructor(root) {\n        super(root);\n    }\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    registerEventListeners() {\n        // Apply parent event listeners.\n        super.registerEventListeners();\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, (e, data) => {\n            var saveEvent = $.Event(PlannerEvents.savenewtemplate);\n            this.getRoot().trigger(saveEvent, this);\n\n            if (!saveEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        });\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, (e, data) => {\n            var cancelEvent = $.Event(ModalEvents.cancel);\n            this.getRoot().trigger(cancelEvent, this);\n\n            if (!cancelEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        });\n    }\n}\nModalSaveNewTemplate.TYPE = 'mod_planner-modal_save_new_template';\n\n// Automatically register with the modal registry the first time this module is imported so that you can create modals\n// of this type using the modal factory.\nif (!registered) {\n    ModalRegistry.register(ModalSaveNewTemplate.TYPE, ModalSaveNewTemplate, 'mod_planner/modal_save_new_template');\n    registered = true;\n}"],"names":["registered","SELECTORS","ModalSaveNewTemplate","Modal","constructor","root","registerEventListeners","getModal","on","CustomEvents","events","activate","e","data","saveEvent","$","Event","PlannerEvents","savenewtemplate","getRoot","trigger","this","isDefaultPrevented","hide","originalEvent","preventDefault","cancelEvent","ModalEvents","cancel","TYPE","register"],"mappings":";;;;;;;yYA8BIA,YAAa,QACXC,sBACW,kCADXA,wBAEa,+BAGEC,6BAA6BC,eAO9CC,YAAYC,YACFA,MAQVC,+BAEUA,8BAEDC,WAAWC,GAAGC,mCAAaC,OAAOC,SAAUV,uBAAuB,CAACW,EAAGC,YACpEC,UAAYC,gBAAEC,MAAMC,gBAAcC,sBACjCC,UAAUC,QAAQN,UAAWO,MAE7BP,UAAUQ,4BACNC,OACLV,KAAKW,cAAcC,0BAItBlB,WAAWC,GAAGC,mCAAaC,OAAOC,SAAUV,yBAAyB,CAACW,EAAGC,YACtEa,YAAcX,gBAAEC,MAAMW,sBAAYC,aACjCT,UAAUC,QAAQM,YAAaL,MAE/BK,YAAYJ,4BACRC,OACLV,KAAKW,cAAcC,mEAKnCvB,qBAAqB2B,KAAO,sCAIvB7B,qCACa8B,SAAS5B,qBAAqB2B,KAAM3B,qBAAsB,uCACxEF,YAAa"}