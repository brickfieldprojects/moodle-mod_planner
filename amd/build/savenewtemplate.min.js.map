{"version":3,"file":"savenewtemplate.min.js","sources":["../src/savenewtemplate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Creates the modals for the guide tips.\n *\n * @author      Jay Churchward <jay@brickfieldlabs.ie>\n * @copyright   2021 Brickfield Education Labs <jay@brickfieldlabs.ie>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalSaveNewTemplate from './modal_save_new_template';\nimport PlannerEvents from './events';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from \"core/ajax\";\nimport Notification from \"core/notification\";\n\n/**\n * Register event listeners for the module.\n */\nconst registerEventListeners = (templateData,) => {\n    document.addEventListener('click', e => {\n        const trigger = e.target.closest('#id_savenewtemplate');\n        if (trigger) {\n            e.preventDefault();\n\n            show(trigger, { focusOnClose: e.target }, templateData, repeatNo);\n        }\n    });\n};\n\n/**\n * Shows the gateway selector modal.\n *\n * @param {HTMLElement} rootNode\n * @param {Object} options - Additional options\n * @param {HTMLElement} options.focusOnClose The element to focus on when the modal is closed.\n */\nconst show = async (rootNode, { focusOnClose = null } = {}) => {\n    const modal = await ModalFactory.create({ type: ModalSaveNewTemplate.TYPE });\n\n    modal.show();\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        // Destroy when hidden.\n        modal.destroy();\n        try {\n            focusOnClose.focus();\n        } catch (e) {\n            // eslint-disable-line\n        }\n    });\n\n    modal.getRoot().on(PlannerEvents.savenewtemplate, (e) => {\n        // Get value from input field.\n        const templateName = document.getElementById('newTemplateName').value;\n        const disclaimer = document.getElementById('id_disclaimereditable').innerHTML;\n        const stepName = [];\n        const stepAllocation = [];\n        const stepDescription = [];\n        for (let i = 0; i < repeatNo; i++) {\n            let str = ''.concat('id_stepname_', + i);\n            stepName.push(document.getElementById(''.concat('id_stepname_', + i)).value);\n            stepAllocation.push(document.getElementById('id_stepallocation_' + i).value);\n            stepDescription.push(document.getElementById('id_stepdescription_' + i + 'editable').innerHTML);\n        }\n        Ajax.call([{\n            methodname: 'mod_planner_save_new_template',\n            args: {\n                name: templateName,\n                disclaimer: disclaimer,\n                personal: isPersonal,\n                stepname: stepName,\n                stepallocation: stepAllocation,\n                stepdescription: stepDescription,\n                optionrepeats: repeatNo,\n            },\n            fail: Notification.exception,\n        }]);\n    });\n\n};\n\n/**\n * Set up the payment actions.\n */\nexport const init = (templatedata, repeatno, personal) => {\n    templateData = templatedata;\n    repeatNo = repeatno;\n    isPersonal = personal;\n    if (!init.initialised) {\n        // Event listeners should only be registered once.\n        init.initialised = true;\n        registerEventListeners();\n    }\n};\n\nlet templateData = '';\nlet repeatNo = 0;\nlet isPersonal = '';\n/**\n * Whether the init function was called before.\n *\n * @static\n * @type {boolean}\n */\ninit.initialised = false;"],"names":["show","async","rootNode","focusOnClose","modal","ModalFactory","create","type","ModalSaveNewTemplate","TYPE","getRoot","on","ModalEvents","hidden","destroy","focus","e","PlannerEvents","savenewtemplate","templateName","document","getElementById","value","disclaimer","innerHTML","stepName","stepAllocation","stepDescription","i","repeatNo","concat","push","call","methodname","args","name","personal","isPersonal","stepname","stepallocation","stepdescription","optionrepeats","fail","Notification","exception","init","templatedata","repeatno","templateData","initialised","addEventListener","trigger","target","closest","preventDefault","registerEventListeners"],"mappings":";;;;;;;4YAmDMA,KAAOC,eAAOC,cAAUC,aAAEA,aAAe,6DAAS,SAC9CC,YAAcC,uBAAaC,OAAO,CAAEC,KAAMC,iCAAqBC,OAErEL,MAAMJ,OAENI,MAAMM,UAAUC,GAAGC,sBAAYC,QAAQ,KAEnCT,MAAMU,cAEFX,aAAaY,QACf,MAAOC,QAKbZ,MAAMM,UAAUC,GAAGM,gBAAcC,iBAAkBF,UAEzCG,aAAeC,SAASC,eAAe,mBAAmBC,MAC1DC,WAAaH,SAASC,eAAe,yBAAyBG,UAC9DC,SAAW,GACXC,eAAiB,GACjBC,gBAAkB,OACnB,IAAIC,EAAI,EAAGA,EAAIC,SAAUD,IAAK,CACrB,GAAGE,OAAO,gBAAkBF,GACtCH,SAASM,KAAKX,SAASC,eAAe,GAAGS,OAAO,gBAAkBF,IAAIN,OACtEI,eAAeK,KAAKX,SAASC,eAAe,qBAAuBO,GAAGN,OACtEK,gBAAgBI,KAAKX,SAASC,eAAe,sBAAwBO,EAAI,YAAYJ,yBAEpFQ,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFC,KAAMhB,aACNI,WAAYA,WACZa,SAAUC,WACVC,SAAUb,SACVc,eAAgBb,eAChBc,gBAAiBb,gBACjBc,cAAeZ,UAEnBa,KAAMC,sBAAaC,iBASlBC,KAAO,CAACC,aAAcC,SAAUX,YACzCY,aAAeF,aACfjB,SAAWkB,SACXV,WAAaD,SACRS,KAAKI,cAENJ,KAAKI,aAAc,EAxEKD,CAAAA,eAC5B5B,SAAS8B,iBAAiB,SAASlC,UACzBmC,QAAUnC,EAAEoC,OAAOC,QAAQ,uBAC7BF,UACAnC,EAAEsC,iBAEFtD,KAAKmD,QAAS,CAAEhD,aAAca,EAAEoC,QAAUJ,aAAcnB,eAmE5D0B,4BAIJP,aAAe,GACfnB,SAAW,EACXQ,WAAa,GAOjBQ,KAAKI,aAAc"}